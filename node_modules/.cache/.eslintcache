[{"C:\\Users\\USER\\Desktop\\REACT\\weatherappp\\src\\index.js":"1","C:\\Users\\USER\\Desktop\\REACT\\weatherappp\\src\\App.js":"2","C:\\Users\\USER\\Desktop\\REACT\\weatherappp\\src\\Components\\WeatherCard.js":"3"},{"size":256,"mtime":1669040593435,"results":"4","hashOfConfig":"5"},{"size":1735,"mtime":1669741565771,"results":"6","hashOfConfig":"5"},{"size":1547,"mtime":1669739624693,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},"1du02r5",{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\USER\\Desktop\\REACT\\weatherappp\\src\\index.js",[],[],[],"C:\\Users\\USER\\Desktop\\REACT\\weatherappp\\src\\App.js",["19","20"],[],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport WeatherCard from \"./Components/WeatherCard\";\n\nfunction App() {\n  const [lat, setLat] = useState(\"\");\n  const [long, setLong] = useState(\"\");\n\n  const [data, setData] = useState([]);\n  const [city, setCity] = useState(\"\");\n\n  const [loading, setLoading] = useState(false);\n\n  const key = \"29da4ac9ed4552e77d90788296abc187\";\n  const urlCurrLoc = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&units=metric&appid=${key}`;\n  const urlCity = `https://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=${key}`;\n\n  const getGeoLocData = () => {\n    setLoading(true);\n    navigator.geolocation.getCurrentPosition(function (position) {\n      setLat(position.coords.latitude);\n      setLong(position.coords.longitude);\n    });\n\n    axios\n      .get(urlCurrLoc)\n      .then((response) => {\n        setData(response.data);\n        setLoading(false);\n        console.log(response.data);\n      })\n      .catch((error) => {\n        setLoading(false);\n        console.error(`Error: ${error}`);\n      });\n  };\n\n  useEffect(() => {\n    getGeoLocData();\n    console.log('useefect called')\n  }, [lat, long]);\n\n  const getData = () => {\n    axios\n      .get(urlCity)\n      .then((response) => {\n        setData(response.data);\n      })\n      .catch((error) => {\n        console.log(`Error: ${error}`);\n      });\n  };\n\n  useEffect(() => {\n    getData();\n  }, [urlCity]);\n\n  const getCity = (e) => {\n    setCity(e.target.value);\n  };\n\n  return (\n    <div>\n      <WeatherCard\n        data={data}\n        getCity={getCity}\n        getData={getData}\n        loading={loading}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\USER\\Desktop\\REACT\\weatherappp\\src\\Components\\WeatherCard.js",[],[],{"ruleId":"21","severity":1,"message":"22","line":42,"column":6,"nodeType":"23","endLine":42,"endColumn":17,"suggestions":"24"},{"ruleId":"21","severity":1,"message":"25","line":57,"column":6,"nodeType":"23","endLine":57,"endColumn":15,"suggestions":"26"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getGeoLocData'. Either include it or remove the dependency array.","ArrayExpression",["27"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["28"],{"desc":"29","fix":"30"},{"desc":"31","fix":"32"},"Update the dependencies array to be: [getGeoLocData, lat, long]",{"range":"33","text":"34"},"Update the dependencies array to be: [getData, urlCity]",{"range":"35","text":"36"},[1212,1223],"[getGeoLocData, lat, long]",[1474,1483],"[getData, urlCity]"]