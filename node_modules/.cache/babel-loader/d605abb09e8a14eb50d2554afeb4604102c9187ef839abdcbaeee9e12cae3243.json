{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\REACT\\\\weatherappp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n// import WeatherCard from \"./Components/WeatherCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [lat, setLat] = useState(0);\n  const [long, setLong] = useState(0);\n  const [data, setData] = useState([]);\n  const [city, setCity] = useState(\"\");\n  const key = \"29da4ac9ed4552e77d90788296abc187\";\n  // const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=${key}`;\n  const urlCity = `https://api.openweathermap.org/data/2.5/weather?q=abuja&appid=${key}`;\n  const urlGeo = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${long}&%20exclude=minutely,hourly&units=metric&appid=${key}`;\n  navigator.geolocation.getCurrentPosition(function (position) {\n    setLat(position.coords.latitude);\n    setLong(position.coords.longitude);\n\n    // const {\n    //   coords: { setLat, setLong },\n    // } = position;\n    console.log(lat, long);\n  });\n  const getGeoLoc = () => {\n    {\n      response.dat ? axios.get(urlGeo).then(response => {\n        setData(response.data);\n        console.log(response.data);\n      }).catch(error => {\n        console.log(`Error: ${error}`);\n      }) : \"loading\";\n    }\n  };\n  useEffect(() => {\n    getGeoLoc();\n  }, [lat, long]);\n\n  // const getData = () => {\n  //   axios\n  //     .get(urlCity)\n  //     .then((response) => {\n  //       setData(response.data);\n  //       console.log(response.data);\n  //     })\n  //     .catch((error) => {\n  //       console.log(`Error: ${error}`);\n  //     });\n  // };\n\n  // useEffect(() => {\n  //   getData();\n  // }, []);\n\n  const getCity = e => {\n    setCity(e.target.value);\n    console.log(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        getData();\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"enter location...\",\n        value: city,\n        onChange: getCity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"pa\",\n      children: data.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"pJyTyAbPD3+uhdKz2k0OEi2+Yr8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","App","lat","setLat","long","setLong","data","setData","city","setCity","key","urlCity","urlGeo","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","console","log","getGeoLoc","response","dat","get","then","catch","error","getCity","e","target","value","preventDefault","getData","name"],"sources":["C:/Users/USER/Desktop/REACT/weatherappp/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n// import WeatherCard from \"./Components/WeatherCard\";\n\nfunction App() {\n  const [lat, setLat] = useState(0);\n  const [long, setLong] = useState(0);\n  const [data, setData] = useState([]);\n  const [city, setCity] = useState(\"\");\n\n  const key = \"29da4ac9ed4552e77d90788296abc187\";\n  // const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=${key}`;\n  const urlCity = `https://api.openweathermap.org/data/2.5/weather?q=abuja&appid=${key}`;\n  const urlGeo = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${long}&%20exclude=minutely,hourly&units=metric&appid=${key}`;\n\n  navigator.geolocation.getCurrentPosition(function (position) {\n    setLat(position.coords.latitude);\n    setLong(position.coords.longitude);\n\n    // const {\n    //   coords: { setLat, setLong },\n    // } = position;\n    console.log(lat, long);\n  });\n\n  const getGeoLoc = () => {\n    {\n      response.dat\n        ? axios\n            .get(urlGeo)\n            .then((response) => {\n              setData(response.data);\n              console.log(response.data);\n            })\n            .catch((error) => {\n              console.log(`Error: ${error}`);\n            })\n        : \"loading\";\n    }\n  };\n\n  useEffect(() => {\n    getGeoLoc();\n  }, [lat, long]);\n\n  // const getData = () => {\n  //   axios\n  //     .get(urlCity)\n  //     .then((response) => {\n  //       setData(response.data);\n  //       console.log(response.data);\n  //     })\n  //     .catch((error) => {\n  //       console.log(`Error: ${error}`);\n  //     });\n  // };\n\n  // useEffect(() => {\n  //   getData();\n  // }, []);\n\n  const getCity = (e) => {\n    setCity(e.target.value);\n    console.log(e.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      {/* <WeatherCard\n        weather={weather}\n        city={city}\n        setCity={setCity}\n        getData={getData}\n      /> */}\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          getData();\n        }}\n      >\n        <input\n          placeholder=\"enter location...\"\n          value={city}\n          onChange={getCity}\n        />\n      </form>\n      <p className=\"pa\">{data.name}</p>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB;AAAA;AAEA,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC;EACjC,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMW,GAAG,GAAG,kCAAkC;EAC9C;EACA,MAAMC,OAAO,GAAI,iEAAgED,GAAI,EAAC;EACtF,MAAME,MAAM,GAAI,uDAAsDV,GAAI,QAAOE,IAAK,kDAAiDM,GAAI,EAAC;EAE5IG,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAC,UAAUC,QAAQ,EAAE;IAC3Db,MAAM,CAACa,QAAQ,CAACC,MAAM,CAACC,QAAQ,CAAC;IAChCb,OAAO,CAACW,QAAQ,CAACC,MAAM,CAACE,SAAS,CAAC;;IAElC;IACA;IACA;IACAC,OAAO,CAACC,GAAG,CAACnB,GAAG,EAAEE,IAAI,CAAC;EACxB,CAAC,CAAC;EAEF,MAAMkB,SAAS,GAAG,MAAM;IACtB;MACEC,QAAQ,CAACC,GAAG,GACRxB,KAAK,CACFyB,GAAG,CAACb,MAAM,CAAC,CACXc,IAAI,CAAEH,QAAQ,IAAK;QAClBhB,OAAO,CAACgB,QAAQ,CAACjB,IAAI,CAAC;QACtBc,OAAO,CAACC,GAAG,CAACE,QAAQ,CAACjB,IAAI,CAAC;MAC5B,CAAC,CAAC,CACDqB,KAAK,CAAEC,KAAK,IAAK;QAChBR,OAAO,CAACC,GAAG,CAAE,UAASO,KAAM,EAAC,CAAC;MAChC,CAAC,CAAC,GACJ,SAAS;IACf;EACF,CAAC;EAED9B,SAAS,CAAC,MAAM;IACdwB,SAAS,EAAE;EACb,CAAC,EAAE,CAACpB,GAAG,EAAEE,IAAI,CAAC,CAAC;;EAEf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,MAAMyB,OAAO,GAAIC,CAAC,IAAK;IACrBrB,OAAO,CAACqB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IACvBZ,OAAO,CAACC,GAAG,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAOlB;MACE,QAAQ,EAAGF,CAAC,IAAK;QACfA,CAAC,CAACG,cAAc,EAAE;QAClBC,OAAO,EAAE;MACX,CAAE;MAAA,uBAEF;QACE,WAAW,EAAC,mBAAmB;QAC/B,KAAK,EAAE1B,IAAK;QACZ,QAAQ,EAAEqB;MAAQ;QAAA;QAAA;QAAA;MAAA;IAClB;MAAA;MAAA;MAAA;IAAA,QACG,eACP;MAAG,SAAS,EAAC,IAAI;MAAA,UAAEvB,IAAI,CAAC6B;IAAI;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QAC7B;AAEV;AAAC,GArFQlC,GAAG;AAAA,KAAHA,GAAG;AAuFZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}