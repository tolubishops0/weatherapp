{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\REACT\\\\weatherappp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n// import WeatherCard from \"./Components/WeatherCard\";\nimport moment from \"moment/moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [lat, setLat] = useState(\"\");\n  const [long, setLong] = useState(\"\");\n  const [data, setData] = useState([]);\n  const [city, setCity] = useState(\"\");\n  const key = \"29da4ac9ed4552e77d90788296abc187\";\n  const urlCurrLoc = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${key}`;\n  const urlCity = `https://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=${key}`;\n  // const APP_ICON_URL = \"https://openweathermap.org/img/w/\";\n\n  const getGeoLocData = async () => {\n    navigator.geolocation.getCurrentPosition(function () {});\n  };\n  const getWeather = async position => {\n    setLat(position.coords.latitude);\n    setLong(position.coords.longitude);\n    try {\n      await axios.get(urlCurrLoc).then(res => {\n        setData(res);\n        console.log(res);\n      });\n    } catch (error) {\n      console.log(err);\n    }\n  };\n\n  // if (navigator.geolocation) {\n\n  //     .catch((error) => {\n  //       console.log(`Error: ${error}`);\n  //     });\n  // } else {\n  //   console.log(\"Unable to get location\");\n  // }\n\n  useEffect(() => {\n    getGeoLocData();\n  }, []);\n  const getData = () => {\n    axios.get(urlCity).then(response => {\n      setData(response.data);\n      console.log(response.data);\n    }).catch(error => {\n      console.log(`Error: ${error}`);\n    });\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  const getCity = e => {\n    setCity(e.target.value);\n    console.log(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"ion-icon\", {\n      name: \"location-outline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: data.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-input\",\n      onSubmit: e => {\n        e.preventDefault();\n        getData();\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"enter location...\",\n        value: city,\n        onChange: getCity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), !data ? \"loading...\" : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [data.name, /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://openweathermap.org/img/w/${data.weather.icon}.png`,\n        alt: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"t9Jvu6ML/sSi3UavB3d4bNMVU7Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","moment","App","lat","setLat","long","setLong","data","setData","city","setCity","key","urlCurrLoc","urlCity","getGeoLocData","navigator","geolocation","getCurrentPosition","getWeather","position","coords","latitude","longitude","get","then","res","console","log","error","err","getData","response","catch","getCity","e","target","value","name","preventDefault","weather","icon"],"sources":["C:/Users/USER/Desktop/REACT/weatherappp/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n// import WeatherCard from \"./Components/WeatherCard\";\nimport moment from \"moment/moment\";\n\nfunction App() {\n  const [lat, setLat] = useState(\"\");\n  const [long, setLong] = useState(\"\");\n\n  const [data, setData] = useState([]);\n  const [city, setCity] = useState(\"\");\n\n  const key = \"29da4ac9ed4552e77d90788296abc187\";\n  const urlCurrLoc = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${key}`;\n  const urlCity = `https://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=${key}`;\n  // const APP_ICON_URL = \"https://openweathermap.org/img/w/\";\n\n  const getGeoLocData = async () => {\n    navigator.geolocation.getCurrentPosition(function () {});\n  };\n\n  const getWeather = async (position) => {\n    setLat(position.coords.latitude);\n    setLong(position.coords.longitude);\n    try {\n      await axios.get(urlCurrLoc).then((res) => {\n        setData(res);\n        console.log(res);\n      });\n    } catch (error) {\n      console.log(err);\n    }\n  };\n\n  // if (navigator.geolocation) {\n\n  //     .catch((error) => {\n  //       console.log(`Error: ${error}`);\n  //     });\n  // } else {\n  //   console.log(\"Unable to get location\");\n  // }\n\n  useEffect(() => {\n    getGeoLocData();\n  }, []);\n\n  const getData = () => {\n    axios\n      .get(urlCity)\n      .then((response) => {\n        setData(response.data);\n        console.log(response.data);\n      })\n      .catch((error) => {\n        console.log(`Error: ${error}`);\n      });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getCity = (e) => {\n    setCity(e.target.value);\n    console.log(e.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <ion-icon name=\"location-outline\"></ion-icon>\n      <span>{data.name}</span>\n      <form\n        className=\"form-input\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          getData();\n        }}\n      >\n        <input\n          placeholder=\"enter location...\"\n          value={city}\n          onChange={getCity}\n        />\n      </form>\n      {!data ? (\n        \"loading...\"\n      ) : (\n        <div>\n          {data.name}\n          <img\n            src={`https://openweathermap.org/img/w/${data.weather.icon}.png`}\n            alt=\"icon\"\n          />\n        </div>\n      )}\n      {/* <img\n        src={`https://openweathermap.org/img/w/${data.weather[0].icon}.png`}\n        alt=\"icon\"\n      /> */}\n      {/* \n      <p className=\"pa\">{data.weather[0].description}</p>\n      <p className=\"pa\">{data.sys.country}</p>\n      <p className=\"pa\">{data.weather[0].icon}</p>\n      <p>\n        The sunrise at:\n        {new Date(data.sys.sunrise * 1000).toLocaleTimeString(\"en-IN\")}\n      </p>\n      <p>\n        The sunset at: :\n        {new Date(data.sys.sunset * 1000).toLocaleTimeString(\"en-IN\")}\n      </p>\n      <p>Today: {moment().format(\"dddd\")}</p>\n      <p>Date: {moment().format(\"LL\")}</p> */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}