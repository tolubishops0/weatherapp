{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\REACT\\\\weatherappp\\\\src\\\\Components\\\\CurrentLocation.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CurrentLocation() {\n  if (navigator.geolocation) {\n    this.getCurrentPosition().then(position => {\n      this.getWeather(position.coords.latitude, position.coords.longitude);\n    });\n  } else {\n    alert(\"Geolocation not available\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"CurrentLocation\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n}\n_c = CurrentLocation;\nexport default CurrentLocation;\nvar _c;\n$RefreshReg$(_c, \"CurrentLocation\");","map":{"version":3,"names":["React","CurrentLocation","navigator","geolocation","getCurrentPosition","then","position","getWeather","coords","latitude","longitude","alert"],"sources":["C:/Users/USER/Desktop/REACT/weatherappp/src/Components/CurrentLocation.js"],"sourcesContent":["import React from \"react\";\r\n\r\nfunction CurrentLocation() {\r\n  if (navigator.geolocation) {\r\n    this.getCurrentPosition().then((position) => {\r\n      this.getWeather(position.coords.latitude, position.coords.longitude);\r\n    });\r\n  } else {\r\n    alert(\"Geolocation not available\");\r\n  }\r\n  return <div>CurrentLocation</div>;\r\n}\r\n\r\nexport default CurrentLocation;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAE1B,SAASC,eAAe,GAAG;EACzB,IAAIC,SAAS,CAACC,WAAW,EAAE;IACzB,IAAI,CAACC,kBAAkB,EAAE,CAACC,IAAI,CAAEC,QAAQ,IAAK;MAC3C,IAAI,CAACC,UAAU,CAACD,QAAQ,CAACE,MAAM,CAACC,QAAQ,EAAEH,QAAQ,CAACE,MAAM,CAACE,SAAS,CAAC;IACtE,CAAC,CAAC;EACJ,CAAC,MAAM;IACLC,KAAK,CAAC,2BAA2B,CAAC;EACpC;EACA,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAA0B;AACnC;AAAC,KATQV,eAAe;AAWxB,eAAeA,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}