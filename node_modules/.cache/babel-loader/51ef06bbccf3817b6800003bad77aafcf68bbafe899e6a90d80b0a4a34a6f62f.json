{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n// import WeatherCard from \"./Components/WeatherCard\";\nimport moment from \"moment/moment\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [lat, setLat] = useState(\"\");\n  const [long, setLong] = useState(\"\");\n  const [data, setData] = useState([]);\n  const [city, setCity] = useState(\"\");\n  const key = \"29da4ac9ed4552e77d90788296abc187\";\n  const urlCurrLoc = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${key}`;\n  const urlCity = `https://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=${key}`;\n  // const APP_ICON_URL = \"https://openweathermap.org/img/w/\";\n\n  const getGeoLocData = async () => {\n    await navigator.geolocation.getCurrentPosition(function (position) {\n      setLat(position.coords.latitude);\n      setLong(position.coords.longitude);\n    });\n    await axios.get(urlCurrLoc).then(response => {\n      console.log(response.data);\n      setData(response.data);\n    }).catch(error => {\n      console.log(`Error: ${error}`);\n    });\n  };\n  useEffect(() => {\n    getGeoLocData();\n  }, [lat, long]);\n\n  // const getData = () => {\n  //   axios\n  //     .get(urlCity)\n  //     .then((response) => {\n  //       setData(response.data);\n  //       // console.log(response.data);\n  //     })\n  //     .catch((error) => {\n  //       // console.log(`Error: ${error}`);\n  //     });\n  // };\n\n  // useEffect(() => {\n  //   getData();\n  // }, []);\n\n  // const getCity = (e) => {\n  //   setCity(e.target.value);\n  //   console.log(e.target.value);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"yo\"\n  }, void 0, false)\n  // <div className=\"App\">\n  //   <ion-icon name=\"location-outline\"></ion-icon>\n  //   <span>{data.name}</span>\n  //   <form\n  //     className=\"form-input\"\n  //     onSubmit={(e) => {\n  //       e.preventDefault();\n  //       // getData();\n  //     }}\n  //   >\n  //     <input\n  //       placeholder=\"enter location...\"\n  //       value={city}\n  //       onChange={getCity}\n  //     />\n  //   </form>\n\n  //   <img\n  //     src={`https://openweathermap.org/img/w/${data.weather[0].icon}.png`}\n  //     alt=\"icon\"\n  //   />\n  //   <p className=\"pa\">{data.weather[0].description}</p>\n  //   <p className=\"pa\">{data.sys.country}</p>\n  //   <p className=\"pa\">{data.weather[0].icon}</p>\n  //   <p>\n  //     The sunrise at:\n  //     {new Date(data.sys.sunrise * 1000).toLocaleTimeString(\"en-IN\")}\n  //   </p>\n  //   <p>\n  //     The sunset at: :\n  //     {new Date(data.sys.sunset * 1000).toLocaleTimeString(\"en-IN\")}\n  //   </p>\n  //   <p>Today: {moment().format(\"dddd\")}</p>\n  //   <p>Date: {moment().format(\"LL\")}</p>\n  // </div>\n  ;\n}\n_s(App, \"QhPEAce49lgFDHVr7wGrPiFNt+s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","moment","App","lat","setLat","long","setLong","data","setData","city","setCity","key","urlCurrLoc","urlCity","getGeoLocData","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","get","then","response","console","log","catch","error"],"sources":["C:/Users/USER/Desktop/REACT/weatherappp/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n// import WeatherCard from \"./Components/WeatherCard\";\nimport moment from \"moment/moment\";\n\nfunction App() {\n  const [lat, setLat] = useState(\"\");\n  const [long, setLong] = useState(\"\");\n\n  const [data, setData] = useState([]);\n  const [city, setCity] = useState(\"\");\n\n  const key = \"29da4ac9ed4552e77d90788296abc187\";\n  const urlCurrLoc = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${key}`;\n  const urlCity = `https://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=${key}`;\n  // const APP_ICON_URL = \"https://openweathermap.org/img/w/\";\n\n  const getGeoLocData = async () => {\n    await\n    navigator.geolocation.getCurrentPosition(function (position) {\n      setLat(position.coords.latitude);\n      setLong(position.coords.longitude);\n    });\n\n    await axios\n      .get(urlCurrLoc)\n      .then((response) => {\n        console.log(response.data);\n        setData(response.data);\n      })\n      .catch((error) => {\n        console.log(`Error: ${error}`);\n      });\n  };\n  useEffect(() => {\n    getGeoLocData();\n  }, [lat, long]);\n\n  // const getData = () => {\n  //   axios\n  //     .get(urlCity)\n  //     .then((response) => {\n  //       setData(response.data);\n  //       // console.log(response.data);\n  //     })\n  //     .catch((error) => {\n  //       // console.log(`Error: ${error}`);\n  //     });\n  // };\n\n  // useEffect(() => {\n  //   getData();\n  // }, []);\n\n  // const getCity = (e) => {\n  //   setCity(e.target.value);\n  //   console.log(e.target.value);\n  // };\n\n  return (\n    <>yo</>\n    // <div className=\"App\">\n    //   <ion-icon name=\"location-outline\"></ion-icon>\n    //   <span>{data.name}</span>\n    //   <form\n    //     className=\"form-input\"\n    //     onSubmit={(e) => {\n    //       e.preventDefault();\n    //       // getData();\n    //     }}\n    //   >\n    //     <input\n    //       placeholder=\"enter location...\"\n    //       value={city}\n    //       onChange={getCity}\n    //     />\n    //   </form>\n\n    //   <img\n    //     src={`https://openweathermap.org/img/w/${data.weather[0].icon}.png`}\n    //     alt=\"icon\"\n    //   />\n    //   <p className=\"pa\">{data.weather[0].description}</p>\n    //   <p className=\"pa\">{data.sys.country}</p>\n    //   <p className=\"pa\">{data.weather[0].icon}</p>\n    //   <p>\n    //     The sunrise at:\n    //     {new Date(data.sys.sunrise * 1000).toLocaleTimeString(\"en-IN\")}\n    //   </p>\n    //   <p>\n    //     The sunset at: :\n    //     {new Date(data.sys.sunset * 1000).toLocaleTimeString(\"en-IN\")}\n    //   </p>\n    //   <p>Today: {moment().format(\"dddd\")}</p>\n    //   <p>Date: {moment().format(\"LL\")}</p>\n    // </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB;AACA,OAAOC,MAAM,MAAM,eAAe;AAAC;AAAA;AAEnC,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMY,GAAG,GAAG,kCAAkC;EAC9C,MAAMC,UAAU,GAAI,uDAAsDT,GAAI,QAAOE,IAAK,UAASM,GAAI,EAAC;EACxG,MAAME,OAAO,GAAI,qDAAoDJ,IAAK,UAASE,GAAI,EAAC;EACxF;;EAEA,MAAMG,aAAa,GAAG,YAAY;IAChC,MACAC,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAC,UAAUC,QAAQ,EAAE;MAC3Dd,MAAM,CAACc,QAAQ,CAACC,MAAM,CAACC,QAAQ,CAAC;MAChCd,OAAO,CAACY,QAAQ,CAACC,MAAM,CAACE,SAAS,CAAC;IACpC,CAAC,CAAC;IAEF,MAAMrB,KAAK,CACRsB,GAAG,CAACV,UAAU,CAAC,CACfW,IAAI,CAAEC,QAAQ,IAAK;MAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACjB,IAAI,CAAC;MAC1BC,OAAO,CAACgB,QAAQ,CAACjB,IAAI,CAAC;IACxB,CAAC,CAAC,CACDoB,KAAK,CAAEC,KAAK,IAAK;MAChBH,OAAO,CAACC,GAAG,CAAE,UAASE,KAAM,EAAC,CAAC;IAChC,CAAC,CAAC;EACN,CAAC;EACD9B,SAAS,CAAC,MAAM;IACdgB,aAAa,EAAE;EACjB,CAAC,EAAE,CAACX,GAAG,EAAEE,IAAI,CAAC,CAAC;;EAEf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA,oBACE;IAAA;EAAA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEJ;AAAC,GA5FQH,GAAG;AAAA,KAAHA,GAAG;AA8FZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}