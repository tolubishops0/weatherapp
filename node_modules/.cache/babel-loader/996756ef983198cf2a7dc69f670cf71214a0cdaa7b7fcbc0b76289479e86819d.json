{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\REACT\\\\weatherappp\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport WeatherCard from \"./Components/WeatherCard\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.getCurrWeather = () => {\n      this.setState({\n        loading: true\n      });\n      navigator.geolocation.getCurrentPosition(position => {\n        const key = \"29da4ac9ed4552e77d90788296abc187\";\n        const urlCurrLoc = `https://api.openweathermap.org/data/2.5/weather?lat=${position.coords.latitude}&lon=${position.coords.longitude}&units=metric&appid=${key}`;\n        axios.get(urlCurrLoc).then(res => {\n          const weather = res.data;\n          this.setState({\n            city: weather.name,\n            description: weather.weather[0].description,\n            icon: weather.weather[0].icon,\n            temp: weather.main.temp,\n            country: weather.sys.country,\n            loading: false\n          });\n          console.log(weather);\n        }).catch(err => console.log(err));\n      });\n    };\n    this.getInputCityWeather = () => {\n      const key = \"29da4ac9ed4552e77d90788296abc187\";\n      const urlCity = `https://api.openweathermap.org/data/2.5/weather?q=${this.state.location}&APPID=${key}`;\n      axios.get(urlCity).then(res => {\n        const weather = res.data;\n        this.setState({\n          city: weather.name,\n          description: weather.weather[0].description,\n          icon: weather.weather[0].icon,\n          temp: weather.main.temp,\n          loading: false\n        });\n        console.log(weather);\n      }).catch(err => console.log(err));\n    };\n    this.getLocWeather = e => {\n      this.setState({\n        location: e.target.value\n      });\n      console.log(e.target.value);\n    };\n    this.state = {\n      city: \"\",\n      description: \"\",\n      icon: \"\",\n      temp: \"\",\n      country: \"\",\n      loading: false,\n      location: \"\"\n    };\n  }\n  componentDidMount() {\n    if (navigator.geolocation) {\n      this.getCurrWeather();\n    } else {\n      alert(\"pls enable access to your location\");\n    }\n  }\n  componentWillMount() {\n    if (this.state.city) {\n      this.getInputCityWeather();\n    }\n  }\n  render() {\n    const {\n      city,\n      temp,\n      icon,\n      country,\n      description,\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(WeatherCard, {\n        city: city,\n        temp: temp,\n        icon: icon,\n        description: description,\n        country: country,\n        loading: loading,\n        getLocWeather: this.getLocWeather,\n        getInputCityWeather: this.getInputCityWeather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","WeatherCard","axios","App","constructor","props","getCurrWeather","setState","loading","navigator","geolocation","getCurrentPosition","position","key","urlCurrLoc","coords","latitude","longitude","get","then","res","weather","data","city","name","description","icon","temp","main","country","sys","console","log","catch","err","getInputCityWeather","urlCity","state","location","getLocWeather","e","target","value","componentDidMount","alert","componentWillMount","render"],"sources":["C:/Users/USER/Desktop/REACT/weatherappp/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport WeatherCard from \"./Components/WeatherCard\";\nimport axios from \"axios\";\nimport \"./App.css\";\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: \"\",\n      description: \"\",\n      icon: \"\",\n      temp: \"\",\n      country: \"\",\n      loading: false,\n      location: \"\",\n    };\n  }\n\n  getCurrWeather = () => {\n    this.setState({ loading: true });\n    navigator.geolocation.getCurrentPosition((position) => {\n      const key = \"29da4ac9ed4552e77d90788296abc187\";\n      const urlCurrLoc = `https://api.openweathermap.org/data/2.5/weather?lat=${position.coords.latitude}&lon=${position.coords.longitude}&units=metric&appid=${key}`;\n      axios\n        .get(urlCurrLoc)\n        .then((res) => {\n          const weather = res.data;\n          this.setState({\n            city: weather.name,\n            description: weather.weather[0].description,\n            icon: weather.weather[0].icon,\n            temp: weather.main.temp,\n            country: weather.sys.country,\n            loading: false,\n          });\n          console.log(weather);\n        })\n        .catch((err) => console.log(err));\n    });\n  };\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      this.getCurrWeather();\n    } else {\n      alert(\"pls enable access to your location\");\n    }\n  }\n\n  getInputCityWeather = () => {\n    const key = \"29da4ac9ed4552e77d90788296abc187\";\n    const urlCity = `https://api.openweathermap.org/data/2.5/weather?q=${this.state.location}&APPID=${key}`;\n    axios\n      .get(urlCity)\n      .then((res) => {\n        const weather = res.data;\n        this.setState({\n          city: weather.name,\n          description: weather.weather[0].description,\n          icon: weather.weather[0].icon,\n          temp: weather.main.temp,\n          loading: false,\n        });\n        console.log(weather);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  componentWillMount() {\n    if (this.state.city) {\n      this.getInputCityWeather();\n    }\n  }\n\n  getLocWeather = (e) => {\n    this.setState({\n      location: e.target.value,\n    });\n    console.log(e.target.value);\n  };\n\n  render() {\n    const { city, temp, icon, country, description, loading } = this.state;\n    return (\n      <div>\n        <WeatherCard\n          city={city}\n          temp={temp}\n          icon={icon}\n          description={description}\n          country={country}\n          loading={loading}\n          getLocWeather={this.getLocWeather}\n          getInputCityWeather={this.getInputCityWeather}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}